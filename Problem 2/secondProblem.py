# https://projecteuler.net/problem=2

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def create_fibonacci(top_limit):
	vals = [1, 2]
	prev_prev_val = 1
	prev_val = 2
	while prev_val < top_limit:
		new_val = prev_val + prev_prev_val
		vals.append(new_val)
		prev_prev_val = prev_val
		prev_val = new_val
	return vals[:-1]

def main(top_limit):
	fibonacci_vals = create_fibonacci(top_limit)
	even_fibo_vals =  [val for val in fibonacci_vals if val%2==0]
	return sum(even_fibo_vals)

	


if __name__ == "__main__":
    print(main(4000000))